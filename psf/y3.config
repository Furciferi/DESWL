verbose = 0
output_dots = false
output_info = false

#root = [Usually given on the command line]
image_ext = _immasked.fits.fz
cat_ext = _cat.fits
weight_ext = _immasked.fits.fz
badpix_ext = _immasked.fits.fz
#skymap_ext = _bkg.fits.fz
dist_ext = _immasked.fits.fz

image_hdu = 2
cat_hdu = 3
weight_hdu = 4
badpix_hdu = 3
#skymap_hdu = 2
dist_hdu = 2

##############################################################################
# 
# Parameters for input catalog:
#
cat_id_col = NUMBER
cat_x_col = XWIN_IMAGE
cat_y_col = YWIN_IMAGE
#cat_sky_col = BACKGROUND
cat_flag_col = FLAGS
cat_ra_col = ALPHAWIN_J2000
cat_dec_col = DELTAWIN_J2000
#cat_mag_col = MAG_PSF
#cat_mag_err_col = MAGERR_PSF
cat_mag_col = MAG_AUTO
cat_mag_err_col = MAGERR_AUTO
cat_sg_col = CLASS_STAR
#cat_sg_col = SPREAD_MODEL
#cat_noise_col = SIGSKY  
#cat_size_col = IXX
#cat_size2_col = IYY # optional - if present, add two sizes together
#
cat_ok_flags = 0x3
#cat_ignore_flags = 0x4
#   Sextractor flags:
#      0x1 = has neighbors
#      0x2 = was blended
#      0x4 = saturated
#      0x8 = truncated by edge
#      0x10 = aperture measurements are corrupted (affects xmodel,ymodel)
#      0x20 = isophotal measurements are corrupted 
#      0x40 = memory overflow during deblending
#      0x80 = memory overflow during extraction
#
cat_x_offset = 1
cat_y_offset = 1
#
# If the sky value is not given in the catalog, it can be specified here
# (or on the command line, since it varies from one exposure to another).
# If neither cat_sky nor cat_sky_col (or cat_sky_col as appropriate)
# are given, then the code calculates the sky value from the image median.
# So if you have a sky-subtracted image, for example, you should explicitly
# set this to 0.
#
cat_global_sky = 0.
#
#
##############################################################################


##############################################################################
#
# Parameters related to the noise
#
# The allowed methods for calculating the noise in the image are:
# VALUE, CATALOG, CATALOG_SIGMA, GAIN_VALUE, GAIN_FITS, WEIGHT_IMAGE
#
noise_method = WEIGHT_IMAGE
#
# If noise_method == WEIGHT_IMAGE:
# Then the noise is read in from a weight image file.
# The weight file gives the inverse noise for each pixel.
# It is taken to have the same name as the input fitsfile, but with
# (possibly) a different extension, given by weight_ext.
# You may also specify an HDU to use if necessary with weight_hdu
#
#weight_ext = .fits
#weight_file = weightfile
#weight_hdu = 2
#
##############################################################################


##############################################################################
# 
# Parameters related to the distortion:
#
# Like with the noise, there are a number of ways to specify the 
# distortion function.  That is, the function mapping chip (x,y) values
# onto sky values in arcseconds.
#
# The allowed methods are: SCALE, JACOBIAN, FUNC2D, WCS
# 
dist_method = WCS
#
#
# If dist_method = WCS, then the distortion function is read from 
# WCS parameters in a fits file 
#
#dist_ext = .fits.fz  .fits
#
##############################################################################


##############################################################################
#
# Parameters for Findstars:
#
# This first one isn't part of the real findstars algorithm.
# It is a bit DES-specific for finding a good size for each object
# that then goes into the findstars algorithm (which looks at the 
# size-magnitude diagram).
# If stars_use_shapelet_sigma = true, then the code will do a full
# shapelet measurement that finds the shapelet sigma that has b11=0.
# This is quite a bit slower than the alternative which is to just do
# a crude second moment integration.  But it might be more robust.
# Probably once we figure out whether this method is better, I'll remove
# this parameter and just go with the better method.  But for now this 
# will make it easier to compare the two methods.
#
stars_use_shapelet_sigma = true
#
#
# There are a bunch of parameters defining how the findstars algorithm 
# works.  Unfortunately is a bit of an art getting this correct for
# a given survey.  We have tried to give meaningful names to make it 
# easier to figure out what a reasonable choice for each parameter is.
# However, we usually need to look at the debug output
# for inputs that don't produce a good stellar solution to figure
# out how to tweak the parameters for better results.
#
# Some basic parameters defining which input objects to use:
#
stars_minsize =		0.1	# The min size to consider
stars_maxsize =		5.	# The max size to consider
stars_logsize =		0	# Are sizes already log(size)?
stars_minsg =		0.5
stars_maxsg =	        1.0
stars_minsgmag =	10	# The min mag for initial selection
stars_maxsgmag =	14	# The max mag for initial selection
stars_minsgfrac =	2.0	# The min frac of initial stars to use sg cut (>1 means ignore sg)
#stars_minsg =		-0.002	# The min sg value that indicates a star in catalog
#stars_maxsg =	        0.002	# The max sg value that indicates a star in catalog
#stars_minsgmag =	10	# The min mag for initial selection
#stars_maxsgmag =	14	# The max mag for initial selection
#stars_minsgfrac =	0.05	# The min frac of initial stars to use sg cut

# These are for the SExtractor mags with wrong zeropoint
stars_minmag =		0	# The min magnitude to consider
stars_maxmag =		30	# The max magnitude to consider
stars_maxoutmag =	30	# The max magnitude to include in output
stars_minnu  =          40      # The minimum S/N in output
#
# Parameters for the first pass through catalog when the whole
# region is divided into subdivisions
#
stars_ndivx =		1	# Number of subdivisions in x direction
stars_ndivy =		2	# Number of subdivisions in y direction
stars_startn1 =		0.10	# How many objects to start with per subdivision
                        	# as a fraction of total number of objects
stars_starfrac =	0.5	# What fraction of startn1 are probably stars
stars_magstep1 =	0.2	# Step size in magnitudes 
stars_miniter1 =	5	# Min times to step up the magnitude cutoff
stars_reject1 =		3.0	# N sigma for rejection 
stars_binsize1 =	0.025	# Bin size for histogram
stars_maxratio1 =	0.05	# Max ratio of valley count to peak count
stars_okvalcount =	2	# If valley count<=this, consider it ok
				# even if ratio>maxratio1
stars_maxrms =		0.05	# Max rms of first linear fit.
stars_starsperbin =	30	# Minimum stars to expect in each bin
#
# Parameters for the final pass through catalog 
#
stars_fitorder =	2	# Order of fitted function size(x,y)
stars_fitsigclip =	3.0	# Sigma clip when fitting size(x,y)
stars_startn2 =		0.25	# How many objects to start with 
stars_magstep2 =	0.10	# Step size in magnitudes 
stars_miniter2 =	5	# Min times to step up the magnitude cutoff
stars_minbinsize =	0.01	# Min width of histogram bins
stars_reject2 =		4.0	# N sigma for rejection 
stars_purityratio =	0.05	# Max ratio of valley count to peak count
stars_maxrefititer =	5	# Max number of times to refit size(x,y) 
#
#
# If you want to skip the whole star-finder algorithm and just trust
# a column in the input catalog, you can do that.  The column that
# indicates whether the object is a star should be set with:
#
#cat_sg_col = 6
#
# You need to define what range of values indicates a star. 
# e.g. if a catalog has galaxies with 1 and stars with 2, like in clusterstep:
#
#stars_minsg = 1.9
#stars_maxsg = 2.1
#
# And finally, you need to uncomment the next line to tell finstars to trust
# the catalog's sg values and not run its own thing.
#
#stars_trust_sg = true
#
#
##############################################################################


###############################################################################
#
# Parameters related to the PSF measurement:
# 
# psf_aperture = How many arcsec (radius) to use for the aperture
#
psf_aperture = 4.
#
#
# psf_order = The order of the shapelet decomposition to be measured
#
psf_order = 10
#
#
# psf_maxm = The maximum m value to use in the shapelet decomposition.
#            Essentially, all higher orders terms are taken to be zero.
#            If not specified, the default is psf_order.
#
#psf_maxm = 6
#
#
# psf_seeing_est = An estimate of the seeing.  
# The code can easily handle actual values that are a factor of 
# two or more different from this, but if it is very very wrong,
# then it might have trouble.  The value is specified in arcsec.
# The results are fairly robust to this value being inaccurate, but it is
# better to err on the high side.  In our tests, the estimate was stable
# for starting values from about 0.4 to 16 times the correct value.
#
psf_seeing_est = 2.0
# 
#
# psf_force_sigma_p = The value of sigma_p to use.  This is in lieu of
# calculating the optimal sigma_p value from the actual sizes of the stars.
# When doing simple simulations, it can be useful to have the stars 
# measured with a known sigma_p to help make tests of the answers a bit
# easier.
#
#psf_force_sigma_p = 3.0
#
#
# psf_fix_centroid is an option to fix the centroid of the stars at the 
# location given in the input catalog.  This is useful both for simulations
# where the centroid may be know exactly, and you want to avoid the 
# small amount of noise from letting it float, and also if you have 
# astrometric positions for the stars, and you want the measured PSF to
# include the centroid offset induced by the atmosphere.
#
#psf_fix_centroid = true
#
##############################################################################



